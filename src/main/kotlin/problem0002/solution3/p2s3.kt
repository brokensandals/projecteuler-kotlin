package problem0002.solution3

/*
Problem statement from https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

// The site (https://projecteuler.net/overview=002) points out that you can
// calculate the sequence of even Fibonacci numbers without calculating the
// intervening odd numbers. E(n) = E(n-2) + 4*E(n-1)

fun main() {
    var prev = 2
    var cur = 8
    var sum = 2
    while (cur <= 4000000) {
        sum += cur
        val next = prev + 4 * cur
        prev = cur
        cur = next
    }
    println(sum)
}